/**
 * 
 */
package com.swt.sworld.kms;

/**
 * @author LOCVIP
 *
 */
public interface IKMS {
	
	String extKey(String ten);
	/*
	 *  KeyDTO
	 */
	/**
	 * 
	 * Nhiá»‡m vá»¥: thÃªm key vÃ o database
	 * @param name : tÃªn, kÃ½ danh
	 * @param description : mÃ´ táº£
	 * @param value : giÃ¡ trá»‹
	 * @param curUserName : tÃªn ngÆ°á»?i dÃ¹ng hiá»‡n táº¡i
	 * @return : EntityTranslator.ToKeyDto();
	 */
	Object AddKey(String name, String description, String value, String curUserName);
	
	/**
	 * 
	 * Nhiá»‡m vá»¥: tá»± Ä‘á»™ng sinh ra sector master key
	 * @param keyBytes : máº£ng key byte
	 * @param sector : sector
	 * @return : máº£ng SMK dÃ£ mÃ£ hÃ³a SHA1
	 */
	byte[] GenerateSmk(byte[] keyBytes, byte sector);
	
	/**
	 * 
	 * Nhiá»‡m vá»¥: tá»± Ä‘á»™ng sinh ra key A
	 * @param smkBytes : sector master key
	 * @param snBytes : serial number of card
	 * @return : máº£ng key A 6 byte
	 */
	byte[] GenerateSectorKeyA(byte[] smkBytes, byte[] snBytes);
	
	/**
	 * 
	 * Nhiá»‡m vá»¥: tá»± Ä‘á»™ng sinh ra key B
	 * @param smkBytes : sector master key
	 * @param snBytes : serial number of card
	 * @return : máº£ng key B 6 byte
	 */
	byte[] GenerateSectorKeyB(byte[] smkBytes, byte[] snBytes);
	
	/**
	 * 
	 * Nhiá»‡m vá»¥: tá»± Ä‘á»™ng sinh ra key Pair
	 * @param smkBytes : sector master key
	 * @param snBytes : serial number of card
	 * @param keyABytes : key A
	 * @param keyBBytes : key B
	 */
	void GenerateSectorKeyPair(byte[] smkBytes, byte[] snBytes,/*out*/  byte[] keyABytes,/*out*/ byte[] keyBBytes);

}
